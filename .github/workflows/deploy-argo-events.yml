name: Deploy Argo Events to K3s

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # ðŸ‘ˆ Manual trigger equivalent

env:
  KUBECTL_VERSION: "1.30.0"

jobs:
  validate-manifests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}
          
      - name: Validate manifests
        run: |
          kubectl --dry-run=client apply -f event-sources/ -R
          kubectl --dry-run=client apply -f sensors/ -R
          kubectl --dry-run=client apply -f workflow-templates/ -R

  deploy-to-k3s:
    runs-on: ubuntu-latest
    needs: validate-manifests
    if: github.ref == 'refs/heads/main' && (github.event_name == 'workflow_dispatch' || github.event_name == 'push')
    environment: workflow
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}
          
      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.K3S_KUBECONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
          
      - name: Test cluster connectivity
        run: |
          kubectl cluster-info --request-timeout=10s
          kubectl get nodes
          
      - name: Make deploy script executable
        run: chmod +x scripts/deploy.sh
        
      - name: Deploy to K3s cluster
        run: ./scripts/deploy.sh
        
      - name: Show deployment status
        if: always()
        run: |
          echo "ðŸ“Š Current deployment status:"
          kubectl get eventsources -n argo-events || true
          kubectl get sensors -n argo-events || true
          kubectl get workflowtemplates -n argo || true